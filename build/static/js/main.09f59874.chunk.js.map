{"version":3,"sources":["assets/bg.jpg","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ExpansionPanelEnum","StyledContainer","styled","display","height","alignItems","justifyContent","backgroundImage","bgImage","backgroundSize","Wrapper","width","flexDirection","StyledPaper","Paper","marginBottom","PageTitle","Typography","margin","StyledExpansionPanelDetails","ExpansionPanelDetails","Paragraph","TextWithIndent","textIndent","App","useState","expanded","setExpanded","handleChange","panel","elevation","variant","ExpansionPanel","Overview","onChange","ExpansionPanelSummary","expandIcon","ExpandMore","href","target","rel","TechnicalRequirement","Journal","Additional","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.09f59874.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.dd303e52.jpg\";","import React, { useState } from 'react';\nimport {ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary, Paper, Typography, styled } from '@material-ui/core';\nimport { ExpandMore } from '@material-ui/icons';\n\nimport bgImage from './assets/bg.jpg'\n\nenum ExpansionPanelEnum {\n  Overview = 'Overview',\n  TechnicalRequirement = 'TechnicalRequirement',\n  Journal = 'Journal',\n  Additional = 'Additional',\n}\n\n\nconst App = () => {\n  const [expanded, setExpanded] = useState('');\n\n  const handleChange = (panel: string) => setExpanded(panel)\n  \n  return (\n    <StyledContainer>\n      \n      <Wrapper>\n        <StyledPaper elevation={3}>\n          <PageTitle variant=\"h3\">Module: Grade journal</PageTitle>\n          <PageTitle variant=\"h4\">Group: 6</PageTitle>\n        </StyledPaper>\n        <ExpansionPanel expanded={expanded === ExpansionPanelEnum.Overview} onChange={() => handleChange(ExpansionPanelEnum.Overview)}>\n          <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n            <Typography variant=\"h6\">Overview</Typography>\n          </ExpansionPanelSummary>\n          <StyledExpansionPanelDetails>\n          <p><b>Team leader:</b>Bondarenko Vadim</p>\n            <b>Participants:</b>\n            <TextWithIndent>> Bondarenko Vadim</TextWithIndent>\n            <TextWithIndent>> Kikhniei Danyil</TextWithIndent>\n            <Paragraph><b>Task manager:</b> <a href=\"https://trello.com/b/myYAJjiQ/grade-project\" target=\"_blank\" rel=\"noopener noreferrer\">Trello</a></Paragraph>\n            <Paragraph><b>Project terms:</b> <i>04.04.20 - 25.05.20</i></Paragraph>\n          </StyledExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel expanded={expanded === ExpansionPanelEnum.TechnicalRequirement} onChange={() => handleChange(ExpansionPanelEnum.TechnicalRequirement)}>\n          <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n            <Typography variant=\"h6\">Technical Requirement</Typography>\n          </ExpansionPanelSummary>\n          <StyledExpansionPanelDetails>\n            <Paragraph>\n              <b>Link with file: </b>\n              <a href=\"https://docs.google.com/document/d/1naWBdEDxwGP0klN37xVbURi7DCDHTff_5wSZ_U6lpLU/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">Technical Requirement</a>\n            </Paragraph>\n          </StyledExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel expanded={expanded === ExpansionPanelEnum.Journal} onChange={() => handleChange(ExpansionPanelEnum.Journal)}>\n          <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n            <Typography variant=\"h6\">Journal</Typography>\n          </ExpansionPanelSummary>\n          <StyledExpansionPanelDetails>\n            <p><b>Link with file: </b><a href=\"https://docs.google.com/spreadsheets/d/1x6ZvnlZJgqdzx6J-GxXfw4dHkzN_ElqeP9r3kB1gxes/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">Journal</a></p>\n            <Paragraph><b>Time logs:</b></Paragraph>\n            <TextWithIndent>> <a href=\"https://drive.google.com/open?id=1MPOPYk5zhMuqNArLTZ4wtdYgU6WmVp2_7HHCBBaPuJo\" target=\"_blank\" rel=\"noopener noreferrer\">Bondarenko</a></TextWithIndent>\n            <TextWithIndent>> <a href=\"https://drive.google.com/open?id=1OilDZAEvm3yS4HNb09mh_wLh_UxgaeiyRUSaZqALPls\" target=\"_blank\" rel=\"noopener noreferrer\">Kikhniei</a></TextWithIndent>\n          </StyledExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel expanded={expanded === ExpansionPanelEnum.Additional} onChange={() => handleChange(ExpansionPanelEnum.Additional)}>\n          <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n            <Typography variant=\"h6\">Additional</Typography>\n          </ExpansionPanelSummary>\n          <StyledExpansionPanelDetails>\n            <Paragraph><b>Design:</b> <i>In process</i></Paragraph>\n            <Paragraph><b>ERD:</b> <i>In process</i></Paragraph>\n          </StyledExpansionPanelDetails>\n        </ExpansionPanel>\n      </Wrapper>\n    </StyledContainer>\n  );\n}\n\n\nconst StyledContainer = styled('div')({\n  display: 'flex',\n  height: '100vh',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundImage: `url(${bgImage})`,\n  backgroundSize: 'cover',\n});\n\nconst Wrapper = styled('div')({\n  width: '70%',\n  display: 'flex',\n  flexDirection: 'column',\n})\n\nconst StyledPaper = styled(Paper)({\n  marginBottom: '25px'\n})\n\nconst PageTitle = styled(Typography)({\n  margin: '15px',\n})\n\nconst StyledExpansionPanelDetails = styled(ExpansionPanelDetails)({\n  flexDirection: 'column'\n})\n\nconst Paragraph = styled('p')({\n  margin: '10px 0',\n})\n\nconst TextWithIndent = styled('p')({\n  margin: '10px 0',\n  textIndent: '25px',\n})\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './app.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}